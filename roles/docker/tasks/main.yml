---
- name: Update apt package index
  apt:
    update_cache: yes
  become: yes

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  become: yes

- name: Remove conflicting Docker repository files
  file:
    path: "{{ item }}"
    state: absent
  become: yes
  loop:
    - /etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list
    - /etc/apt/sources.list.d/docker-ce.list
  ignore_errors: yes

- name: Create keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: yes

- name: Check if Docker GPG key already exists
  stat:
    path: /etc/apt/keyrings/docker.gpg
  register: docker_gpg_key

- name: Download Docker's official GPG key
  get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /tmp/docker.gpg
    mode: '0644'
  become: yes
  when: not docker_gpg_key.stat.exists

- name: Convert and install Docker GPG key
  shell: |
    gpg --dearmor < /tmp/docker.gpg > /etc/apt/keyrings/docker.gpg
    chmod 644 /etc/apt/keyrings/docker.gpg
  become: yes
  when: not docker_gpg_key.stat.exists

- name: Remove temporary GPG key file
  file:
    path: /tmp/docker.gpg
    state: absent
  become: yes

- name: Get system architecture
  command: dpkg --print-architecture
  register: system_arch
  changed_when: false

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch={{ system_arch.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  become: yes

- name: Update apt package index after adding Docker repository
  apt:
    update_cache: yes
  become: yes

- name: Install Docker CE
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  become: yes
  notify: start docker

- name: Ensure Docker service is started and enabled
  systemd:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Add user to docker group
  user:
    name: "{{ docker_user }}"
    groups: docker
    append: yes
  become: yes
  when: docker_user is defined

- name: Install Docker Compose (standalone)
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  become: yes
  when: docker_compose_standalone | default(false)

- name: Create symbolic link for docker-compose
  file:
    src: /usr/local/bin/docker-compose
    dest: /usr/bin/docker-compose
    state: link
  become: yes
  when: docker_compose_standalone | default(false)

- name: Verify Docker installation
  command: docker --version
  register: docker_version_output
  changed_when: false

- name: Display Docker version
  debug:
    msg: "{{ docker_version_output.stdout }}"

- name: Verify Docker Compose installation
  command: docker compose version
  register: docker_compose_version_output
  changed_when: false

- name: Display Docker Compose version
  debug:
    msg: "{{ docker_compose_version_output.stdout }}" 