---
- name: swap off
  become: true
  block:
    - name: set the current swap off
      command: swapoff -a
    - name: disable swap file in /etc/fstab so that it is not loaded at boot-time.
      lineinfile:
        dest: /etc/fstab
        regexp: '^/swap.img'
        line: "#/swap.img"
        state: present

- name: "load modules: overlay and br_netfilter"
  become: true
  block:
    - name: 커널 모듈 overlay, br_netfilter 적재를 위한 설정 파일 생성
      shell:
        cmd: |
          cat <<EOF | tee /etc/modules-load.d/k8s.conf
          overlay
          br_netfilter
          EOF
    - name: "'overlay' 커널 모듈을 적재한다."
      command: modprobe overlay
    - name: "'br_netfilter' 커널 모듈을 적재한다."
      command: modprobe br_netfilter

- name: setup the ipv4 bridge
  become: true
  block:
    - copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
    - command: sysctl --system

- name: disable ufw
  become: true
  ufw: state=disabled

- name: install kubernetes packages and hold them
  become: true
  block:
    - name: Ensure '/etc/apt/keyrings' directory
      file: path=/etc/apt/keyrings state=directory

    - name: Download Kubernetes GPG key
      become: true
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        keyring: "{{ k8s_keyring_file }}"
        state: present
        
    - name: Add Kubernetes software repository
      become: true
      apt_repository:
        repo: "deb [signed-by={{ k8s_keyring_file }}] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        filename: kubernetes
        update_cache: yes

    - name: Install kubernetes
      become: true
      apt:
        name: [ 'kubelet', 'kubeadm', 'kubectl' ]
        state: present
        update_cache: yes

    - name: Hold kubelet package at current version
      become: true
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
      notify: restart kubelet