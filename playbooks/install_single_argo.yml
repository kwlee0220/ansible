---
- name: Install Argo Workflows on Ubuntu 22.04
  hosts: all

  vars:
    user_home_dir: "{{ ansible_env.HOME }}"

  tasks:
    - name: Install Helm
      shell: curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm
      become: true

    - name: Add Argo Helm repo
      shell: |
        helm repo add argo https://argoproj.github.io/argo-helm
        helm repo update
      changed_when: false

    - name: Install Argo Workflows
      shell: >
        helm install argo-workflows argo/argo-workflows
        -n argo --create-namespace
        --set server.extraArgs="{--auth-mode=server}"
        --set server.serviceType=NodePort
      args:
        creates: /usr/local/bin/argo

    - name: Download Argo CLI
      get_url:
        url: https://github.com/argoproj/argo-workflows/releases/latest/download/argo-linux-amd64.gz
        dest: /tmp/argo-linux-amd64.gz
        mode: '0644'

    - name: Extract Argo CLI
      shell: gunzip /tmp/argo-linux-amd64.gz
      args:
        creates: /tmp/argo-linux-amd64

    - name: Install Argo CLI
      copy:
        src: /tmp/argo-linux-amd64
        dest: /usr/local/bin/argo
        mode: '0755'
        remote_src: yes
      become: true

    - name: Create systemd service file
      copy:
        dest: /etc/systemd/system/argo-portforward.service
        content: |
          [Unit]
          Description=Argo Workflows UI port-forward (2746 -> svc/argo-workflows-server)
          After=network-online.target k3s.service
          Wants=network-online.target
          Requires=k3s.service

          [Service]
          Type=simple
          User={{ ansible_user }}
          Environment=PATH=/usr/local/bin:/usr/bin:/bin
          Environment=KUBECONFIG={{ user_home_dir }}/.kube/config
          ExecStartPre=/usr/bin/bash -lc 'until kubectl --request-timeout=5s -n argo get svc argo-workflows-server >/dev/null 2>&1; do sleep 2; done'
          ExecStart=/usr/bin/env kubectl -n argo port-forward svc/argo-workflows-server 2746:2746 --address 0.0.0.0
          Restart=always
          RestartSec=3
          StartLimitIntervalSec=0
          StartLimitBurst=20

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
      become: true

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
      become: true

    - name: Enable and start Argo port-forward service
      systemd:
        name: argo-portforward
        enabled: yes
        state: started
      become: true

    - name: Verify Argo installation
      shell: argo version
      register: argo_version
      changed_when: false
